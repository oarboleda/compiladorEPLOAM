/* Generated By:JavaCC: Do not edit this line. EPLOAMConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EPLOAMConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PRINCIPAL = 5;
  /** RegularExpression Id. */
  int ALGORITMO = 6;
  /** RegularExpression Id. */
  int TIPOENTERO = 7;
  /** RegularExpression Id. */
  int TIPOREAL = 8;
  /** RegularExpression Id. */
  int TIPOCARACTER = 9;
  /** RegularExpression Id. */
  int TIPOBOOLEANO = 10;
  /** RegularExpression Id. */
  int TIPOCADENA = 11;
  /** RegularExpression Id. */
  int FUNC_RAIZ = 12;
  /** RegularExpression Id. */
  int FUNC_SENO = 13;
  /** RegularExpression Id. */
  int FUNC_ABSOLUTO = 14;
  /** RegularExpression Id. */
  int FUNC_POTENCIA = 15;
  /** RegularExpression Id. */
  int PAREN_ABRE = 16;
  /** RegularExpression Id. */
  int PAREN_CIERRA = 17;
  /** RegularExpression Id. */
  int LLAVE_ABRE = 18;
  /** RegularExpression Id. */
  int LLAVE_CIERRA = 19;
  /** RegularExpression Id. */
  int PUNTOYCOMA = 20;
  /** RegularExpression Id. */
  int DOSPUNTOS = 21;
  /** RegularExpression Id. */
  int COMA = 22;
  /** RegularExpression Id. */
  int LEER = 23;
  /** RegularExpression Id. */
  int IMPRIMIR = 24;
  /** RegularExpression Id. */
  int SI = 25;
  /** RegularExpression Id. */
  int SINO = 26;
  /** RegularExpression Id. */
  int SEGUN = 27;
  /** RegularExpression Id. */
  int CASO = 28;
  /** RegularExpression Id. */
  int OTROCASO = 29;
  /** RegularExpression Id. */
  int ROMPA = 30;
  /** RegularExpression Id. */
  int PARA = 31;
  /** RegularExpression Id. */
  int MIENTRAS = 32;
  /** RegularExpression Id. */
  int HAGA = 33;
  /** RegularExpression Id. */
  int BOOLEANO = 34;
  /** RegularExpression Id. */
  int ID = 35;
  /** RegularExpression Id. */
  int ENTERO = 36;
  /** RegularExpression Id. */
  int REAL = 37;
  /** RegularExpression Id. */
  int CADENA = 38;
  /** RegularExpression Id. */
  int COMENTARIO = 39;
  /** RegularExpression Id. */
  int CARACTER = 40;
  /** RegularExpression Id. */
  int LETRA = 41;
  /** RegularExpression Id. */
  int DIGITO = 42;
  /** RegularExpression Id. */
  int MASMAS = 43;
  /** RegularExpression Id. */
  int MENOSMENOS = 44;
  /** RegularExpression Id. */
  int MASIGUAL = 45;
  /** RegularExpression Id. */
  int MENOSIGUAL = 46;
  /** RegularExpression Id. */
  int PORIGUAL = 47;
  /** RegularExpression Id. */
  int DIVIGUAL = 48;
  /** RegularExpression Id. */
  int MAS = 49;
  /** RegularExpression Id. */
  int MENOS = 50;
  /** RegularExpression Id. */
  int POR = 51;
  /** RegularExpression Id. */
  int DIVIDIDO = 52;
  /** RegularExpression Id. */
  int MODULO = 53;
  /** RegularExpression Id. */
  int OR = 54;
  /** RegularExpression Id. */
  int AND = 55;
  /** RegularExpression Id. */
  int IGUALLOGICO = 56;
  /** RegularExpression Id. */
  int DIFERENTELOGICO = 57;
  /** RegularExpression Id. */
  int MAYORIGUAL = 58;
  /** RegularExpression Id. */
  int MENORIGUAL = 59;
  /** RegularExpression Id. */
  int MAYOR = 60;
  /** RegularExpression Id. */
  int MENOR = 61;
  /** RegularExpression Id. */
  int IGUAL = 62;
  /** RegularExpression Id. */
  int ILEGAL = 63;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"principal\"",
    "\"algoritmo\"",
    "\"entero\"",
    "\"real\"",
    "\"caracter\"",
    "\"booleano\"",
    "\"cadena\"",
    "\"raiz\"",
    "\"seno\"",
    "\"absoluto\"",
    "\"potencia\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"leer\"",
    "\"imprimir\"",
    "\"si\"",
    "\"sino\"",
    "\"segun\"",
    "\"caso\"",
    "\"default\"",
    "\"break\"",
    "\"para\"",
    "\"mientras\"",
    "\"haga\"",
    "<BOOLEANO>",
    "<ID>",
    "<ENTERO>",
    "<REAL>",
    "<CADENA>",
    "<COMENTARIO>",
    "<CARACTER>",
    "<LETRA>",
    "<DIGITO>",
    "\"++\"",
    "\"--\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "<ILEGAL>",
  };

}
